@use "./variables" as v;

@mixin titlesAndParagraphsStyles($type) {
    background-color: v.$colorBackgroundH;
    color: v.$colorH;
    font-family: v.$fontContent;
    @if $type == h {
        font-weight: v.$hFontWeight;
    } @else if $type == p {
        font-weight: v.$pFontWeight;
    }
}

%heroTitle {
    @include titlesAndParagraphsStyles(h);
    font-size: 8rem;
    padding: 2rem 1rem 1rem 1rem;
    text-align: right;
}

@mixin button($fontsize: 1rem, $color: v.$colorGeneralPrimary) {
    font-family: v.$fontSecondary;
    background-color: v.$colorDark;
    font-weight: 400;
    color: $color;
    font-size: $fontsize;
    text-decoration: none;
    text-transform: uppercase;
    padding: $fontsize;
    margin-top: $fontsize;
    text-align: center;
    border: 1px solid transparent;

    &:hover {
        background-color: $color;
        color: v.$colorDark;
        text-decoration: none;
        border: 1px solid v.$colorDark;
    }
}

%separador {
    height: 2rem;
    background-color: v.$colorDark;
}

@mixin backgroundImgCenterCover($img) {
    background-image: url($img);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

@mixin backgroundImgWhatIveDoneHero($img) {
    background-image: url($img);
    background-repeat: no-repeat;
    background-size: cover;
    background-position-y: center;
    background-position-x: -30vw;
}

@mixin homeWhatIveDoneCard($color, $img, $gridArea) {
    display: flex;
    flex-direction: column;
    height: v.$homeWhatIveDoneCardHeight;
    padding: 10%;
    font-family: v.$fontContent;
    align-items: flex-start;
    justify-content: center;
    background-color: $color;
    @include backgroundImgCenterCover($img);
    grid-area: $gridArea;

    h3 {
        @include titlesAndParagraphsStyles(h);
        font-size: 3rem;
        padding: 1rem 1rem 0 1rem;
    }

    p {
        @include titlesAndParagraphsStyles(p);
        width: 70%;
        font-size: 1.2rem;
        line-height: 1.7rem;
        padding: 1rem;
    }

    a {
        @include button(1rem, $color);
    }
}

@mixin paddingHeroes(
    $top: v.$generalPadding,
    $right: v.$leftRightPadding,
    $bottom: v.$generalPadding,
    $left: v.$leftRightPadding
) {
    padding: $top $right $bottom $left;
}

@mixin whatIveDoneHeroes($colorSection, $bg) {
    @include paddingHeroes();
    @include backgroundImgWhatIveDoneHero($bg);
    min-height: v.$generalHeroHeight;
    background-color: $colorSection;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
    h1 {
        @extend %heroTitle;
    }

    p {
        @include titlesAndParagraphsStyles(p);
        font-size: 2rem;
        padding: 1rem 1rem 0 1rem;
        text-align: right;
    }
}

@mixin whereIveWorkedCards($bgcolor: transparent) {
    background-color: $bgcolor;
    border: 1px solid black;
    width: 100%;
    padding: min(5%, calc(v.$roundIconsSize/3));
    display: grid;
    grid-template-columns: v.$roundIconsSize auto;
    grid-template-areas:
        "icono h3"
        "icono h4"
        "icono p";
    grid-column-gap: min(5%, calc(v.$roundIconsSize/3));
    grid-row-gap: min(0.3rem, calc(v.$roundIconsSize/3));
    margin-bottom: 1.5rem;

    &__icon {
        grid-area: icono;
    }

    &__name {
        font-family: v.$fontContent;
        font-weight: 700;
        font-size: 1.7rem;
        // text-transform: uppercase;
    }

    &__years {
        font-family: v.$fontContent;
        font-size: 1.5rem;
    }

    &__resume {
        font-family: v.$fontContent;
        font-size: 1.3rem;
    }
}

@mixin roundIcons($size) {
    width: $size;
    height: $size;
    object-fit: cover;
    border-radius: calc($size/2);
}
